#!/bin/sh
#
# experimental setup script

die() { echo "$*" 1>&2 ; exit 1; }
warn() { echo "$*" 1>&2 ; }

cd $HOME

# clear out home
rm -rf $HOME/* || warn "failed to clear out home directory"

# setup home filesystem
mkdir -p $HOME/{coding/iso_store/roms,dl/torrent,docs/org,kb,media/{music,pictures/{screenshots},videos}} \
    || warn "failed to create home directories"

# suckless utilities
git clone https://github.com/bcmertz/dmenu.git $HOME/coding/dmenu || warn "failed to clone dmenu"
cd $HOME/coding/dmenu
sudo make clean install || warn "failed to install dmenu"
cd $HOME

git clone https://github.com/bcmertz/st.git $HOME/coding/st || warn "failed to clone st"
cd $HOME/coding/st
sudo make clean install || warn "failed to install st"
cd $HOME

# clone dotfiles
git clone --bare https://github.com/bcmertz/dotfiles.git $HOME/.cfg || die "failed to clone dotfiles"

# alias git commands and checkout files
alias cfg='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'
cfg checkout -f || die "failed to checkout local dotfiles"

# install packages
sudo pacman -Syu yay || die "please manually install yay" # in endeavour os repos
# TODO install aur and pacman (just pacman packages hit by this rn)
yay -S --needed - < $HOME/.local/share/packages/packages.txt || warn "failed to install packages"

# pacman makepackagelist hook
sudo ln -s ~/.config/pacman/update-package-list.hook /etc/pacman.d/hooks/update-package-list.hook
makepackagelist

# reflector timer - update mirrorlists periodically
sudo systemctl enable --now reflector.timer

# install godoc
go install golang.org/x/tools/cmd/godoc@latest

# setup passwords
ssh-keygen -t rsa -C "bennett.mertz@gmail.com"
cat .ssh/id_rsa.pub
echo "Upload ssh public key to github. Press any key to continue"
while [ true ] ; do
    read -t 3 -n 1
    if [ $? = 0 ] ; then
        exit
    fi
done

setuppass || warn "failed to setup gpg / passwords"

# use our local passmenu
sudo rm /usr/bin/passmenu

# setup power management
sudo systemctl enable --new tlp.service

# setup crons
crontab $HOME/.local/bin/cron/crontabbackup.txt || warn "failed to create setup cron"
sudo systemctl enable --now cronie.service  || warn "failed to enable cron service"

# TODO: setupUFW

# config grub
sudo cp -r ~/.config/grub/virtuaverse/ /usr/share/grub/themes/
if grep -q "GRUB_THEME" /etc/default/grub; then
    # replace default grub theme
    sudo sed -i 's/.*GRUB_THEME.*/GRUB_THEME="\/usr\/share\/grub\/themes\/virtuaverse\/theme.txt"/g' /etc/default/grub
else
    # add default grub theme
    sudo echo "GRUB_THEME=\"/boot/grub/themes/virtuaverse/theme.txt\"" >> /etc/default/grub
fi
sudo grub-mkconfig -o /boot/grub/grub.cfg

# touchegg gestures
sudo ln -s ~/.config/X11/40-libinput.conf /etc/X11/xorg.conf.d/
sudo systemctl enable --now touchegg.service || warn "failed to setup touchegg service"

# turn off annoying thinkpad leds
sudo ln -s ~/.config/systemd/toggle-leds.service /etc/systemd/system/toggle-leds.service
sudo systemctl enable --now toggle-leds.service

# libinput gestures - add user to input group
sudo gpasswd -a $USER input

# printing
# sudo systemctl enable --now cups.socket || warn "failed to setup printing service"

# paccache - cleanup old packages weekly
sudo systemctl enable --now paccache.timer

# fonts
fc-cache -f -v || warn "failed to regenerate font cache"

# python / pyenv / venv
curl https://pyenv.run | bash
pip install --user virtualenv

# node npm yarn nvm [from repos/aur]
echo "pacman installs latest node version, might want to use nvm \
to set the node version to lts"

# sudoers timeout
echo "please `sudoedit /etc/sudoers` and \
add `Defaults        timestamp_timeout=-1` to prevent \
sudo timeouts"

# transmission
sudo chmod 770 $HOME/{media/{music,videos},dl/torrent,coding/iso_store,coding/iso_store/roms}
sudo usermod -a -G transmission $USER

# source bashrc etc
# source ~/.profile is needed for full functionality but that can happen later
source ~/.bashrc

echo "Please reboot for all changes to take effect"
