#!/bin/sh
#
# cycle through wallpapers

global_cfg=$HOME/.local/bin/global_cfg

filepath=''
same='false'

# parse flags and or filepath
while getopts 'sf:' flag; do
    case "${flag}" in
        s) same='true';;
        f) filepath="${OPTARG}";;
    esac
done


# get filepath of current wallpaper
# TODO: parse non ~/.local/share/wallpaper/ directory images
# example - /usr/share/backgrounds/
previous=$(cat $HOME/.fehbg | awk '{print $4}' | cut -d"'" -f2)

if [ "$filepath" = "" -a "$same" = "false" ]; then
    # if image not exclicitly specified get different random image
    filepath=$(find ~/.local/share/wallpaper/ -type f | shuf -n 1)
    # if we choose the previously used wallpaper
    while [ $filepath = $previous ]
    do
        filepath=$(find ~/.local/share/wallpaper/ -type f | shuf -n 1)
    done
elif [ "$same" == "true" ]; then
    # if same flag is passed in dont change the wallpaper
    #
    # idk why this hack is necessary for feh to properly set the correct file but it is
    # filepath=$previous would be desireable but it fails for some reason
    filepath=$(echo $previous)
fi

case ${SESSION} in
    sway)
        swaymsg output "*" bg $filepath fill
        ;;

    *)
        if [[ "true" = $($global_cfg "pywal_terminal") ]]
        then
            # set wallpaper and set xresources colorscheme
            wal -i $filepath
        elif [[ "true" = $($global_cfg "pywal_gtk") ]]; then
            # do all that and set gtk scheme
            wpg -s $filepath
        else
            # just set wallpaper
            feh --bg-scale $filepath
        fi
        ;;
esac

# if we're running gnome screensaver update the lock screen
if pgrep -x "gnome-screensav" > /dev/null
then
    # blur lockscreen
    # convert -scale 10% -blur 0x1.5 -resize 1000% $filepath /tmp/lock_screen.png
    # gsettings set org.gnome.desktop.screensaver picture-uri "file:///tmp/lock_screen.png"

    # dont blur
    gsettings set org.gnome.desktop.screensaver picture-uri "file://$filepath"
fi

if [[ "true" = $($global_cfg "pywal_emacs") ]]; then
    # refresh emacs theme
    emacsclient --socket-name=gui -e '(refresh-theme)\'
fi
